#!perl

# DATE
# VERSION

use strict;
use warnings;

use File::Which;
use Getopt::Long;

my %Opts = (
    retry_times => -1,
    retry_delay => 30,
);

Getopt::Long::Configure(
    'bundling', 'pass_through', 'no_auto_abbrev', 'permute');
GetOptions(
    'help|h|?' => sub {
        print <<'_';
Usage: rsync-retry [options] <source> <target>

Options:
  --help, -h, -?   Show this message and exit.
  --version        Show program version and exit.
  --retry-times=i  Number of times to retry (0=no retry, -1=unlimited).
                   Default: -1.
  --retry-delay=i  Number of seconds to wait before retrying. Default: 30.

All the other options will be passed to rsync.

See manpage for more detailed documentation.
_
        exit 0;
    },
    'version' => sub {
        no warnings 'once';
        print "rsync-retry version ", ($main::VERSION || "dev"),
            ($main::DATE ? " ($main::DATE)" : ""), "\n";
        exit 0;
    },
    'retry-times=i' => \$Opts{retry_times},
    'retry-delay=i' => \$Opts{retry_delay},
);

my $rsync_cmd = $ENV{RSYNC_RETRY_RSYNC_CMD} ||
    which("rsynccolor") ? "rsynccolor" : "rsync";

my $retries = 0;
while (1) {
    system {$rsync_cmd} $rsync_cmd, @ARGV;
    last unless $?;
    my $exit_code = $? >> 8;
    if ($exit_code =~ /\A(10|11|12|22|23|24|30|35)\z/) {
        if ($Opts{retry_times} == -1 || ++$retries <= $Opts{retry_times}) {
            warn "rsync-retry: $rsync_cmd exit-code is $exit_code, retrying ($retries) ...\n";
            sleep $Opts{retry_delay};
            next;
        } else {
            warn "rsync-retry: $rsync_cmd exit-code is $exit_code, won't retry anymore, exiting\n";
            exit $exit_code;
        }
    } else {
        exit $exit_code;
    }
}

# ABSTRACT: Rsync wrapper to retry on transfer errors
# PODNAME:

=head1 SYNOPSIS

Use like you would use B<rsync>:

 % rsync-retry -Pavz [other options...] <source> <target>


=head1 DESCRIPTION

This wrapper runs B<rsync> then check its exit code. If exit code indicates
transfer errors (e.g. I/O error, socket error, partial transfers, timeout) it
will re-run the rsync.


=head1 OPTIONS

=head2 --help

Shortcuts: -h, -?.

=head2 --version

=head2 --retry-times

=head2 --retry-delay


=head1 SEE ALSO

B<rsync>.

Some other wrappers for rsync: L<rsync-retry>, L<rsynccolor>.
